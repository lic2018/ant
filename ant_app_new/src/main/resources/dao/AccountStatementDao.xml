<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ant.app.dao.AccountStatementDao">
  <resultMap id="BaseResultMap" type="com.ant.app.entity.AccountStatement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="order_nickname" jdbcType="VARCHAR" property="orderNickname" />
    <result column="month" jdbcType="VARCHAR" property="month" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `type`, amount, create_time, `desc`, `state`, code, username, user_id, nickname, 
    order_nickname, `month`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_statement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_statement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ant.app.entity.AccountStatement" useGeneratedKeys="true">
    insert into account_statement (`type`, amount, create_time, 
      `desc`, `state`, code, 
      username, user_id, nickname, 
      order_nickname, `month`)
    values (#{type,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, 
      #{orderNickname,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ant.app.entity.AccountStatement" useGeneratedKeys="true">
    insert into account_statement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        `type`,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="orderNickname != null">
        order_nickname,
      </if>
      <if test="month != null">
        `month`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="orderNickname != null">
        #{orderNickname,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ant.app.entity.AccountStatement">
    update account_statement
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="orderNickname != null">
        order_nickname = #{orderNickname,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        `month` = #{month,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ant.app.entity.AccountStatement">
    update account_statement
    set `type` = #{type,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `desc` = #{desc,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      order_nickname = #{orderNickname,jdbcType=VARCHAR},
      `month` = #{month,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>